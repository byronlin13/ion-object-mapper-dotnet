name: CI Release

## Commented out for now.
# on:
#   push:
#     branches:
#       - release
#     tags:
#       - "v*.*.*"

# Manual trigger for now.
on: 
  workflow_dispatch:


jobs:
#   build:
#     name: Build and test
#     runs-on: ${{ matrix.os }}
#     strategy:
#       matrix:
#         os: [ windows-latest ] 
#         dotnet: ['5.0.x']

#     steps:
#       - name: Git Checkout
#         uses: actions/checkout@v2
#       - name: Setup .NET
#         uses: actions/setup-dotnet@v1
#         with:
#           dotnet-version: ${{ matrix.dotnet }}

#       - name: Install dependencies
#         run: dotnet restore
#       - name: Build
#         run: dotnet build --configuration Release --no-restore
#       - name: Unit test
#         run: dotnet test Amazon.IonObjectMapper.Test

  sign:
    name: Sign package
#     needs: [build]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ windows-latest ] 
        dotnet: ['5.0.x']

    steps:
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
        
      - name: Git Checkout
        uses: actions/checkout@v2
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ matrix.dotnet }}

      - name: Create publish ready DLL
        run: dotnet publish
        
#       - name: Push unsigned DLL to S3
#         run: aws s3api put-object --bucket ${{ secrets.AWS_UNSIGNED_BUCKET }} --key IonObjectMapperDLL --body Amazon.IonObjectMapper/bin/Debug/net5.0/Amazon.IonObjectMapper.dll

      - name: Push unsigned DLL to S3
      - id: source-version
        run: |
          version=$( aws s3api put-object --bucket ${{ secrets.AWS_UNSIGNED_BUCKET }} --key IonObjectMapperDLL --body Amazon.IonObjectMapper/bin/Debug/net5.0/Amazon.IonObjectMapper.dll | jq '.VersionId' )
          echo "::set-output name=source-version::$version"


      - name: Trigger signing job
        run: echo ${{ steps.source-version.outputs.version }}
#         run: aws signer start-signing-job \
#           --source "s3={bucketName=${{ secrets.AWS_UNSIGNED_BUCKET }},key=IonObjectMapperDLL,version=$SOURCE_VERSION}" \
#           --destination "s3={bucketName=${{ secrets.AWS_SIGNED_BUCKET }},prefix=\"signed/\"}" \
#           --profile-name $PROFILE_NAME \
#           --profile-owner $PROFILE_OWNER
